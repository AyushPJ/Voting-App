{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["ReviewSubmit","props","submitEnabled","rows","this","selections","map","candidate","index","selected","className","name","posts","every","selection","Fragment","Row","Table","style","width","Button","variant","disabled","onClick","e","handleSubmit","Component","Post","caption","post","dp","selectedCandidate","candidates","id","src","height","candidatesList","active","Nav","Item","Link","eventKey","handleVote","rollNo","Col","xs","md","alignSelf","Container","App","state","fetchPosts","fetchCandidates","axios","get","headers","then","resp","newState","Object","assign","data","push","console","log","setState","catch","error","postIndex","selectedIndex","length","url","window","location","href","match","token","slice","votes","voteStatus","preventDefault","Carousel","Caption","display","slide","interval","activeIndex","onSelect","handleSelect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6UAOMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,eAAgB,EAFJ,E,0CAKnB,WAAU,IAAD,OACHC,EAAOC,KAAKH,MAAMI,WAAWC,KAAI,SAACC,EAAWC,GAC/C,IAAIC,EAAW,oBAAIC,UAAU,aAAd,2BAGf,OAFiB,OAAdH,IACDE,EAAY,6BAAKF,EAAUI,QAE3B,+BACE,6BAAK,EAAKV,MAAMW,MAAMJ,KACrBC,IAFMD,MAUb,OAHAJ,KAAKF,cAAgBE,KAAKH,MAAMI,WAAWQ,OAAM,SAACC,GAChD,OAAoB,MAAbA,KAGP,eAAC,IAAMC,SAAP,WACA,cAACC,EAAA,EAAD,UAGE,eAACC,EAAA,EAAD,WACE,gCACE,+BACE,oBAAIC,MAAO,CAACC,MAAM,QAAlB,kBACA,oBAAID,MAAO,CAACC,MAAM,QAAlB,iCAGJ,gCACEhB,SAMN,cAACa,EAAA,EAAD,UACE,cAACI,EAAA,EAAD,CAAQF,MAAO,CAAEC,MAAO,SAAWE,QAAQ,UAAUC,UAAWlB,KAAKF,cAAeqB,QAAS,SAACC,GAAD,OAAK,EAAKvB,MAAMwB,aAAaD,IAA1H,6B,GA1CmBE,aAkDrBC,E,kDACJ,WAAY1B,GAAQ,uCACZA,G,0CAER,WAAU,IAAD,OACH2B,EAAU,kEAAoExB,KAAKH,MAAM4B,KAAO,8CAChGC,EAAK,KAE4B,OAAjC1B,KAAKH,MAAM8B,oBACbH,EAAUxB,KAAKH,MAAM+B,WAAW5B,KAAKH,MAAM8B,kBAAkBE,IAAIL,QACjEE,EAAK,qBAAKI,IAA4B,iBAAkBf,MAAM,MAAMgB,OAAO,SAE7E,IAAIC,EAAiBhC,KAAKH,MAAM+B,WAAW1B,KAAI,SAACC,EAAWC,GACzD,IAAI6B,GAAS,EAIb,OAHqC,OAAjC,EAAKpC,MAAM8B,mBAA8BvB,IAAU,EAAKP,MAAM8B,kBAAkBE,KAClFI,GAAS,GAGT,cAACC,EAAA,EAAIC,KAAL,UACE,cAACD,EAAA,EAAIE,KAAL,CAAUC,SAAUjC,EAAOe,QAAS,SAACC,GAAD,OAAO,EAAKvB,MAAMyC,WAAWlC,EAAOD,EAAUI,KAAMJ,EAAUoC,OAAQnB,IAAIa,OAAQA,EAAtH,SACG9B,EAAUI,QAFAH,MAOnB,OACE,eAACQ,EAAA,EAAD,WACE,cAAC4B,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAG5B,MAAO,CAAE6B,UAAW,UAAvC,SACE,cAACC,EAAA,EAAD,UACE,cAACV,EAAA,EAAD,CAAKjB,QAAQ,QAAQX,UAAU,cAA/B,SACG0B,QAIP,eAACQ,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAG5B,MAAO,CAAE6B,UAAW,UAAxC,UACGjB,EACD,4BAAIF,c,GApCKF,aA2CbuB,E,kDAEJ,WAAYhD,GAAQ,IAAD,8BACjB,cAAMA,IACDiD,MAAQ,CACXtC,MAAO,GACPP,WAAY,CAAC,MACbG,MAAO,EACPwB,WAAY,IANG,E,qDAUnB,WACE5B,KAAK+C,aACL/C,KAAKgD,gBAAgBhD,KAAK8C,MAAM1C,S,wBAGlC,WAAc,IAAD,OACX6C,IAAMC,IAAI,uBAAwB,CAAEC,QAAS,CAAE,OAAU,sBACtDC,MAAK,SAACC,GACL,IAAIC,EAAWC,OAAOC,OAAO,GAAI,EAAKV,OACtCQ,EAAS9C,MAAQ6C,EAAKI,KAAKjD,MAC3B8C,EAASrD,WAAaqD,EAAS9C,MAAMN,KAAI,kBAAM,QAC/CoD,EAAS9C,MAAMkD,KAAK,mBACpBC,QAAQC,IAAIN,GACZ,EAAKO,SAASP,GACd,EAAKN,gBAAgBM,EAAS9C,MAAM,OAErCsD,OAAM,SAAUC,GACfJ,QAAQC,IAAIG,Q,6BAIlB,SAAgBtC,GAAyB,IAAD,OAAlBuC,EAAkB,uDAAN,KACd,OAAdA,IACFvC,EAAOzB,KAAK8C,MAAMtC,MAAMwD,IAE1Bf,IAAMC,IAAI,eAAiBzB,EAAM,CAAE0B,QAAS,CAAE,OAAU,sBACrDC,MAAK,SAACC,GACL,IAAIC,EAAWC,OAAOC,OAAO,GAAI,EAAKV,OACpB,OAAdkB,IACFV,EAASlD,MAAQ4D,GACnBV,EAAS1B,WAAayB,EAAKI,KAAK7B,WAChC,EAAKiC,SAASP,MAEfQ,OAAM,SAAUC,GACfJ,QAAQC,IAAIG,Q,0BAIlB,SAAaE,EAAe7C,GAC1B,GAAI6C,IAAkBjE,KAAK8C,MAAMtC,MAAM0D,OAAS,EAC9ClE,KAAKgD,gBAAgB,KAAMiB,OACxB,CACH,IAAIX,EAAWC,OAAOC,OAAO,GAAIxD,KAAK8C,OACtCQ,EAASlD,MAAQ6D,EACjBjE,KAAK6D,SAASP,M,wBAKlB,SAAWzB,EAAItB,EAAMgC,EAAQnB,GAC3B,IAAIkC,EAAWC,OAAOC,OAAO,GAAIxD,KAAK8C,OACtCQ,EAASrD,WAAWqD,EAASlD,OAAS,CAAEyB,GAAIA,EAAItB,KAAMA,EAAMgC,OAAQA,GACpEvC,KAAK6D,SAASP,K,0BAGhB,SAAalC,GACX,IAAI+C,EAAMC,OAAOC,SAASC,KACtBlE,EAAQ+D,EAAII,MAAM,YAAYnE,MAC9BoE,EAAQL,EAAIM,MAAMrE,EAAM,GAC5B6C,IAAMxB,KAAK,SAAU,CAAEiD,MAAQ1E,KAAK8C,MAAM7C,WAAauE,MAAQA,GAAQ,CAAErB,QAAS,CAAC,OAAU,sBAC5FC,MAAK,SAACC,GACuB,IAAzBA,EAAKI,KAAKkB,WACXP,OAAOC,SAASC,KAA8B,yBACf,IAAzBjB,EAAKI,KAAKkB,WAChBP,OAAOC,SAASC,KAA8B,2BACf,IAAzBjB,EAAKI,KAAKkB,aAChBP,OAAOC,SAASC,KAA8B,yBAEjDR,OAAM,SAACC,GACNJ,QAAQC,IAAIG,MAEd3C,EAAEwD,mB,oBAGJ,WAAU,IAAD,OACHpE,EAAQR,KAAK8C,MAAMtC,MAAMN,KAAI,SAACK,EAAMH,GACtC,OACE,eAACyE,EAAA,EAAS1C,KAAV,WACE,qBAAKL,IAA4B,aAAcf,MAAM,MAAMgB,OAAO,UAClE,cAAC8C,EAAA,EAASC,QAAV,UACGvE,MAHeH,MASpB2E,EAAU,KAOd,OAJEA,EADE/E,KAAK8C,MAAM1C,OAASJ,KAAK8C,MAAMtC,MAAM0D,OAAS,EACtC,cAAC,EAAD,CAAcjE,WAAYD,KAAK8C,MAAM7C,WAAYO,MAAOR,KAAK8C,MAAMtC,MAAOa,aAAc,SAACD,GAAD,OAAK,EAAKC,aAAaD,MAE/G,cAAC,EAAD,CAAMkB,WAAY,SAACT,EAAItB,EAAMgC,EAAQnB,GAAnB,OAAyB,EAAKkB,WAAWT,EAAItB,EAAMgC,EAAQnB,IAAIQ,WAAY5B,KAAK8C,MAAMlB,WAAYD,kBAAmB3B,KAAK8C,MAAM7C,WAAWD,KAAK8C,MAAM1C,OAAQqB,KAAMzB,KAAK8C,MAAMtC,MAAMR,KAAK8C,MAAM1C,SAI5N,sBAAKE,UAAU,mBAAf,UACE,cAACM,EAAA,EAAD,UACE,iDAEDmE,EACD,cAACnE,EAAA,EAAD,UAEE,cAACiE,EAAA,EAAD,CAAUG,OAAO,EAAOC,SAAU,KAAMhE,QAAQ,OAAOiE,YAAalF,KAAK8C,MAAM1C,MAAO+E,SAAU,SAAClB,EAAe7C,GAAhB,OAAsB,EAAKgE,aAAanB,EAAe7C,IAAvJ,SACGZ,a,GAnHKc,aA6HHuB,ICrNAwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnC,MAAK,YAAkD,IAA/CoC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f5d72811.chunk.js","sourcesContent":["\nimport './App.css';\nimport React, { Component } from 'react';\nimport { Container, Nav, Row, Col, Button, Carousel, Table } from 'react-bootstrap'\nimport axios from 'axios'\n\n\nclass ReviewSubmit extends Component {\n  constructor(props) {\n    super(props);\n    this.submitEnabled = true;\n  }\n\n  render() {\n    let rows = this.props.selections.map((candidate, index)=>{\n      let selected = <td className=\"text-muted\">None Selected</td>;\n      if(candidate !== null)\n        selected =  <td>{candidate.name}</td>;\n      return(\n        <tr key={index}>\n          <td>{this.props.posts[index]}</td>\n          {selected}\n        </tr>\n      );\n    });\n\n    this.submitEnabled = this.props.selections.every((selection)=>{\n      return selection != null;\n    });\n    return (\n      <React.Fragment>\n      <Row>\n    \n\n        <Table>\n          <thead>\n            <tr>\n              <th style={{width:\"50vh\"}}>Post</th>\n              <th style={{width:\"50vh\"}}>Candidate Name</th>\n            </tr>\n          </thead>\n          <tbody>\n           {rows}\n          </tbody>\n        </Table>\n        \n    \n      </Row>\n      <Row>        \n        <Button style={{ width: \"100px\" }} variant=\"success\" disabled={!this.submitEnabled} onClick={(e)=>this.props.handleSubmit(e)}>Submit</Button>\n      </Row>\n      </React.Fragment>\n    );\n  }\n\n}\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    let caption = \"Please select a candidate to view more info and choose as your \" + this.props.post + '. You can change your selection afterwards.';\n    let dp = null;\n\n    if (this.props.selectedCandidate !== null) {\n      caption = this.props.candidates[this.props.selectedCandidate.id].caption;\n      dp = <img src={process.env.PUBLIC_URL+\"/samplepfp.png\"} width=\"256\" height=\"256\"></img>;\n    }\n    let candidatesList = this.props.candidates.map((candidate, index) => {\n      let active = false;\n      if (this.props.selectedCandidate !== null && index === this.props.selectedCandidate.id) {\n        active = true;\n      }\n      return (\n        <Nav.Item key={index}>\n          <Nav.Link eventKey={index} onClick={(e) => this.props.handleVote(index, candidate.name, candidate.rollNo, e)} active={active}>\n            {candidate.name}\n          </Nav.Link>\n        </Nav.Item>\n      );\n    });\n    return (\n      <Row>\n        <Col xs={6} md={4} style={{ alignSelf: 'center' }}>\n          <Container>\n            <Nav variant=\"pills\" className=\"flex-column\">\n              {candidatesList}\n            </Nav>\n          </Container>\n        </Col>\n        <Col xs={12} md={8} style={{ alignSelf: 'center' }}>\n          {dp}\n          <p>{caption}</p>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: [],\n      selections: [null],\n      index: 0,\n      candidates: [],\n    }\n  }\n\n  componentDidMount() {\n    this.fetchPosts();\n    this.fetchCandidates(this.state.index);\n  }\n\n  fetchPosts() {\n    axios.get(\"/candidates/getPosts\", { headers: { 'Accept': 'application/json' } })\n      .then((resp) => {\n        let newState = Object.assign({}, this.state);\n        newState.posts = resp.data.posts;\n        newState.selections = newState.posts.map(() => null);\n        newState.posts.push(\"Review & Submit\");\n        console.log(newState);\n        this.setState(newState);\n        this.fetchCandidates(newState.posts[0]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  fetchCandidates(post, postIndex = null) {\n    if (postIndex !== null) {\n      post = this.state.posts[postIndex];\n    }\n    axios.get(\"/candidates/\" + post, { headers: { 'Accept': 'application/json' } })\n      .then((resp) => {\n        let newState = Object.assign({}, this.state);\n        if (postIndex !== null)\n          newState.index = postIndex;\n        newState.candidates = resp.data.candidates;\n        this.setState(newState);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  handleSelect(selectedIndex, e) {\n    if (selectedIndex !== this.state.posts.length - 1)\n      this.fetchCandidates(null, selectedIndex);\n    else {\n      let newState = Object.assign({}, this.state);\n      newState.index = selectedIndex;\n      this.setState(newState);\n    }\n\n  }\n\n  handleVote(id, name, rollNo, e) {\n    let newState = Object.assign({}, this.state);\n    newState.selections[newState.index] = { id: id, name: name, rollNo: rollNo };\n    this.setState(newState);\n  }\n\n  handleSubmit(e) {\n    let url = window.location.href;\n    let index = url.match(/token\\S*/).index;\n    let token = url.slice(index+6);\n    axios.post(\"/vote/\", { votes : this.state.selections , token : token}, { headers: {'Accept': 'application/json' } })\n    .then((resp)=>{\n      if(resp.data.voteStatus === 1)\n        window.location.href = process.env.PUBLIC_URL+\"/vote/votingSuccessful\";\n      else if(resp.data.voteStatus === 2)\n        window.location.href = process.env.PUBLIC_URL+\"/vote/votingUnsuccessful\";\n      else if(resp.data.voteStatus === 3)\n        window.location.href = process.env.PUBLIC_URL+\"/vote/tokenExpired\";\n    })\n    .catch((error)=>{\n      console.log(error);\n    });\n    e.preventDefault();\n  }\n\n  render() {\n    let posts = this.state.posts.map((name, index) => {\n      return (\n        <Carousel.Item key={index}>\n          <img src={process.env.PUBLIC_URL+\"/blank.jpg\"} width=\"500\" height=\"100px\" />\n          <Carousel.Caption>\n            {name}\n          </Carousel.Caption>\n        </Carousel.Item>\n      );\n    });\n\n    let display = null;\n\n    if (this.state.index == this.state.posts.length - 1)\n      display = <ReviewSubmit selections={this.state.selections} posts={this.state.posts} handleSubmit={(e)=>this.handleSubmit(e)}/>;\n    else\n      display = <Post handleVote={(id, name, rollNo, e) => this.handleVote(id, name, rollNo, e)} candidates={this.state.candidates} selectedCandidate={this.state.selections[this.state.index]} post={this.state.posts[this.state.index]} />;\n\n    return (\n\n      <div className=\"container-center\">\n        <Row>\n          <h1>SAC Elections</h1>\n        </Row>\n        {display}\n        <Row>\n\n          <Carousel slide={false} interval={null} variant=\"dark\" activeIndex={this.state.index} onSelect={(selectedIndex, e) => this.handleSelect(selectedIndex, e)} >\n            {posts}\n          </Carousel>\n\n          \n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}